{"remainingRequest":"/home/jimmy/Project/rssdocs/node_modules/babel-loader/lib/index.js??ref--3-1!/home/jimmy/Project/rssdocs/node_modules/vuepress/lib/app/root-mixins/activeHeaderLinks.js","dependencies":[{"path":"/home/jimmy/Project/rssdocs/node_modules/vuepress/lib/app/root-mixins/activeHeaderLinks.js","mtime":1553541624643},{"path":"/home/jimmy/Project/rssdocs/node_modules/cache-loader/dist/cjs.js","mtime":1553541563194},{"path":"/home/jimmy/Project/rssdocs/node_modules/babel-loader/lib/index.js","mtime":1553541563099}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.filter\";\nimport store from '@app/store';\nimport throttle from 'lodash.throttle';\nexport default {\n  mounted: function mounted() {\n    window.addEventListener('scroll', this.onScroll);\n  },\n  methods: {\n    onScroll: throttle(function () {\n      this.setActiveHash();\n    }, 300),\n    setActiveHash: function setActiveHash() {\n      var _this = this;\n\n      var sidebarLinks = [].slice.call(document.querySelectorAll('.sidebar-link'));\n      var anchors = [].slice.call(document.querySelectorAll('.header-anchor')).filter(function (anchor) {\n        return sidebarLinks.some(function (sidebarLink) {\n          return sidebarLink.hash === anchor.hash;\n        });\n      });\n      var scrollTop = Math.max(window.pageYOffset, document.documentElement.scrollTop, document.body.scrollTop);\n\n      for (var i = 0; i < anchors.length; i++) {\n        var anchor = anchors[i];\n        var nextAnchor = anchors[i + 1];\n        var isActive = i === 0 && scrollTop === 0 || scrollTop >= anchor.parentElement.offsetTop + 10 && (!nextAnchor || scrollTop < nextAnchor.parentElement.offsetTop - 10);\n\n        if (isActive && decodeURIComponent(this.$route.hash) !== decodeURIComponent(anchor.hash)) {\n          store.disableScrollBehavior = true;\n          this.$router.replace(decodeURIComponent(anchor.hash), function () {\n            // execute after scrollBehavior handler.\n            _this.$nextTick(function () {\n              store.disableScrollBehavior = false;\n            });\n          });\n          return;\n        }\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('scroll', this.onScroll);\n  }\n};",null]}