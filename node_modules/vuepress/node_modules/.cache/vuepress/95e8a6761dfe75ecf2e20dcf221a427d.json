{"remainingRequest":"/home/jimmy/Project/rssdocs/node_modules/babel-loader/lib/index.js??ref--3-1!/home/jimmy/Project/rssdocs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jimmy/Project/rssdocs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jimmy/Project/rssdocs/node_modules/vuepress/lib/default-theme/NavLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jimmy/Project/rssdocs/node_modules/vuepress/lib/default-theme/NavLinks.vue","mtime":1553541624643},{"path":"/home/jimmy/Project/rssdocs/node_modules/cache-loader/dist/cjs.js","mtime":1553541563194},{"path":"/home/jimmy/Project/rssdocs/node_modules/babel-loader/lib/index.js","mtime":1553541563099},{"path":"/home/jimmy/Project/rssdocs/node_modules/cache-loader/dist/cjs.js","mtime":1553541563194},{"path":"/home/jimmy/Project/rssdocs/node_modules/vue-loader/lib/index.js","mtime":1553541567371}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.object.assign\";\nimport _toConsumableArray from \"/home/jimmy/Project/rssdocs/node_modules/@babel/runtime/helpers/builtin/es6/toConsumableArray\";\nimport \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DropdownLink from './DropdownLink.vue';\nimport { resolveNavLinkItem } from './util';\nimport NavLink from './NavLink.vue';\nexport default {\n  components: {\n    NavLink: NavLink,\n    DropdownLink: DropdownLink\n  },\n  computed: {\n    userNav: function userNav() {\n      return this.$themeLocaleConfig.nav || this.$site.themeConfig.nav || [];\n    },\n    nav: function nav() {\n      var _this = this;\n\n      var locales = this.$site.locales;\n\n      if (locales && Object.keys(locales).length > 1) {\n        var currentLink = this.$page.path;\n        var routes = this.$router.options.routes;\n        var themeLocales = this.$site.themeConfig.locales || {};\n        var languageDropdown = {\n          text: this.$themeLocaleConfig.selectText || 'Languages',\n          items: Object.keys(locales).map(function (path) {\n            var locale = locales[path];\n            var text = themeLocales[path] && themeLocales[path].label || locale.lang;\n            var link; // Stay on the current page\n\n            if (locale.lang === _this.$lang) {\n              link = currentLink;\n            } else {\n              // Try to stay on the same page\n              link = currentLink.replace(_this.$localeConfig.path, path); // fallback to homepage\n\n              if (!routes.some(function (route) {\n                return route.path === link;\n              })) {\n                link = path;\n              }\n            }\n\n            return {\n              text: text,\n              link: link\n            };\n          })\n        };\n        return _toConsumableArray(this.userNav).concat([languageDropdown]);\n      }\n\n      return this.userNav;\n    },\n    userLinks: function userLinks() {\n      return (this.nav || []).map(function (link) {\n        return Object.assign(resolveNavLinkItem(link), {\n          items: (link.items || []).map(resolveNavLinkItem)\n        });\n      });\n    },\n    repoLink: function repoLink() {\n      var repo = this.$site.themeConfig.repo;\n\n      if (repo) {\n        return /^https?:/.test(repo) ? repo : \"https://github.com/\".concat(repo);\n      }\n    },\n    repoLabel: function repoLabel() {\n      if (!this.repoLink) return;\n\n      if (this.$site.themeConfig.repoLabel) {\n        return this.$site.themeConfig.repoLabel;\n      }\n\n      var repoHost = this.repoLink.match(/^https?:\\/\\/[^/]+/)[0];\n      var platforms = ['GitHub', 'GitLab', 'Bitbucket'];\n\n      for (var i = 0; i < platforms.length; i++) {\n        var platform = platforms[i];\n\n        if (new RegExp(platform, 'i').test(repoHost)) {\n          return platform;\n        }\n      }\n\n      return 'Source';\n    }\n  }\n};",null]}