{"remainingRequest":"/home/jimmy/Project/rssdocs/node_modules/babel-loader/lib/index.js??ref--3-1!/home/jimmy/Project/rssdocs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jimmy/Project/rssdocs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jimmy/Project/rssdocs/node_modules/vuepress/lib/default-theme/Layout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jimmy/Project/rssdocs/node_modules/vuepress/lib/default-theme/Layout.vue","mtime":1553541624643},{"path":"/home/jimmy/Project/rssdocs/node_modules/cache-loader/dist/cjs.js","mtime":1553541563194},{"path":"/home/jimmy/Project/rssdocs/node_modules/babel-loader/lib/index.js","mtime":1553541563099},{"path":"/home/jimmy/Project/rssdocs/node_modules/cache-loader/dist/cjs.js","mtime":1553541563194},{"path":"/home/jimmy/Project/rssdocs/node_modules/vue-loader/lib/index.js","mtime":1553541567371}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport nprogress from 'nprogress';\nimport Home from './Home.vue';\nimport Navbar from './Navbar.vue';\nimport Page from './Page.vue';\nimport Sidebar from './Sidebar.vue';\nimport SWUpdatePopup from './SWUpdatePopup.vue';\nimport { resolveSidebarItems } from './util';\nexport default {\n  components: {\n    Home: Home,\n    Page: Page,\n    Sidebar: Sidebar,\n    Navbar: Navbar,\n    SWUpdatePopup: SWUpdatePopup\n  },\n  data: function data() {\n    return {\n      isSidebarOpen: false,\n      swUpdateEvent: null\n    };\n  },\n  computed: {\n    shouldShowNavbar: function shouldShowNavbar() {\n      var themeConfig = this.$site.themeConfig;\n      var frontmatter = this.$page.frontmatter;\n\n      if (frontmatter.navbar === false || themeConfig.navbar === false) {\n        return false;\n      }\n\n      return this.$title || themeConfig.logo || themeConfig.repo || themeConfig.nav || this.$themeLocaleConfig.nav;\n    },\n    shouldShowSidebar: function shouldShowSidebar() {\n      var frontmatter = this.$page.frontmatter;\n      return !frontmatter.layout && !frontmatter.home && frontmatter.sidebar !== false && this.sidebarItems.length;\n    },\n    sidebarItems: function sidebarItems() {\n      return resolveSidebarItems(this.$page, this.$route, this.$site, this.$localePath);\n    },\n    pageClasses: function pageClasses() {\n      var userPageClass = this.$page.frontmatter.pageClass;\n      return [{\n        'no-navbar': !this.shouldShowNavbar,\n        'sidebar-open': this.isSidebarOpen,\n        'no-sidebar': !this.shouldShowSidebar\n      }, userPageClass];\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    window.addEventListener('scroll', this.onScroll); // configure progress bar\n\n    nprogress.configure({\n      showSpinner: false\n    });\n    this.$router.beforeEach(function (to, from, next) {\n      if (to.path !== from.path && !Vue.component(to.name)) {\n        nprogress.start();\n      }\n\n      next();\n    });\n    this.$router.afterEach(function () {\n      nprogress.done();\n      _this.isSidebarOpen = false;\n    });\n    this.$on('sw-updated', this.onSWUpdated);\n  },\n  methods: {\n    toggleSidebar: function toggleSidebar(to) {\n      this.isSidebarOpen = typeof to === 'boolean' ? to : !this.isSidebarOpen;\n    },\n    // side swipe\n    onTouchStart: function onTouchStart(e) {\n      this.touchStart = {\n        x: e.changedTouches[0].clientX,\n        y: e.changedTouches[0].clientY\n      };\n    },\n    onTouchEnd: function onTouchEnd(e) {\n      var dx = e.changedTouches[0].clientX - this.touchStart.x;\n      var dy = e.changedTouches[0].clientY - this.touchStart.y;\n\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\n        if (dx > 0 && this.touchStart.x <= 80) {\n          this.toggleSidebar(true);\n        } else {\n          this.toggleSidebar(false);\n        }\n      }\n    },\n    onSWUpdated: function onSWUpdated(e) {\n      this.swUpdateEvent = e;\n    }\n  }\n};",null]}