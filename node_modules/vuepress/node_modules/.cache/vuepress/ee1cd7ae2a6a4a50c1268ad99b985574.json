{"remainingRequest":"/home/jimmy/Project/rssdocs/node_modules/babel-loader/lib/index.js??ref--3-1!/home/jimmy/Project/rssdocs/node_modules/vuepress/lib/app/root-mixins/updateMeta.js","dependencies":[{"path":"/home/jimmy/Project/rssdocs/node_modules/vuepress/lib/app/root-mixins/updateMeta.js","mtime":1553541624643},{"path":"/home/jimmy/Project/rssdocs/node_modules/cache-loader/dist/cjs.js","mtime":1553541563194},{"path":"/home/jimmy/Project/rssdocs/node_modules/babel-loader/lib/index.js","mtime":1553541563099}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.map\";\nimport _toConsumableArray from \"/home/jimmy/Project/rssdocs/node_modules/@babel/runtime/helpers/builtin/es6/toConsumableArray\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nexport default {\n  created: function created() {\n    if (this.$ssrContext) {\n      this.$ssrContext.title = this.$title;\n      this.$ssrContext.lang = this.$lang;\n      this.$ssrContext.description = this.$page.description || this.$description;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // update title / meta tags\n    this.currentMetaTags = new Set();\n\n    var updateMeta = function updateMeta() {\n      document.title = _this.$title;\n      document.documentElement.lang = _this.$lang;\n      var userMeta = _this.$page.frontmatter.meta || [];\n      var meta = userMeta.slice(0);\n      var useGlobalDescription = userMeta.filter(function (m) {\n        return m.name === 'description';\n      }).length === 0; // #665 Avoid duplicate description meta at runtime.\n\n      if (useGlobalDescription) {\n        meta.push({\n          name: 'description',\n          content: _this.$description\n        });\n      } // Including description meta coming from SSR.\n\n\n      var descriptionMetas = document.querySelectorAll('meta[name=\"description\"]');\n\n      if (descriptionMetas.length) {\n        descriptionMetas.forEach(function (m) {\n          return _this.currentMetaTags.add(m);\n        });\n      }\n\n      _this.currentMetaTags = new Set(updateMetaTags(meta, _this.currentMetaTags));\n    };\n\n    this.$watch('$page', updateMeta);\n    updateMeta();\n  },\n  beforeDestroy: function beforeDestroy() {\n    updateMetaTags(null, this.currentMetaTags);\n  }\n};\n\nfunction updateMetaTags(meta, current) {\n  if (current) {\n    _toConsumableArray(current).forEach(function (c) {\n      document.head.removeChild(c);\n    });\n  }\n\n  if (meta) {\n    return meta.map(function (m) {\n      var tag = document.createElement('meta');\n      Object.keys(m).forEach(function (key) {\n        tag.setAttribute(key, m[key]);\n      });\n      document.head.appendChild(tag);\n      return tag;\n    });\n  }\n}",null]}